commit d09c62cb1ed0
Author: Lee Salzman <lsalzman@mozilla.com>
Date:   Tue Apr 10 12:43:59 2018 -0400

    Bug 1449352 - always composite 24 depth WindowSurfaceX11 as BGRX. r=jrmuizel a=jcristau
    
    MozReview-Commit-ID: 3xeE3EEttR6
    
    --HG--
    extra : source : c6860625a6fd2bcb64f23e9a621521741ae7503e
---
 widget/gtk/WindowSurfaceX11.cpp      | 8 +-------
 widget/gtk/WindowSurfaceX11Image.cpp | 4 ++++
 2 files changed, 5 insertions(+), 7 deletions(-)

diff --git widget/gtk/WindowSurfaceX11.cpp widget/gtk/WindowSurfaceX11.cpp
index 32e3c43ef9ef..a5616f77a6ed 100644
--- widget/gtk/WindowSurfaceX11.cpp
+++ widget/gtk/WindowSurfaceX11.cpp
@@ -36,16 +36,10 @@ WindowSurfaceX11::GetVisualFormat(const Visual* aVisual, unsigned int aDepth)
     }
     break;
   case 24:
-    // Only support the BGRX layout, and report it as BGRA to the compositor.
-    // The alpha channel will be discarded when we put the image.
-    // Cairo/pixman lacks some fast paths for compositing BGRX onto BGRA, so
-    // just report it as BGRX directly in that case.
     if (aVisual->red_mask == 0xff0000 &&
         aVisual->green_mask == 0xff00 &&
         aVisual->blue_mask == 0xff) {
-      gfx::BackendType backend = gfxPlatform::GetPlatform()->GetDefaultContentBackend();
-      return backend == gfx::BackendType::CAIRO ? gfx::SurfaceFormat::B8G8R8X8
-                                                : gfx::SurfaceFormat::B8G8R8A8;
+      return gfx::SurfaceFormat::B8G8R8X8;
     }
     break;
   case 16:
diff --git widget/gtk/WindowSurfaceX11Image.cpp widget/gtk/WindowSurfaceX11Image.cpp
index 59db17b642f2..f89d0d1a13d5 100644
--- widget/gtk/WindowSurfaceX11Image.cpp
+++ widget/gtk/WindowSurfaceX11Image.cpp
@@ -58,6 +58,10 @@ WindowSurfaceX11Image::Lock(const LayoutDeviceIntRegion& aRegion)
 
   gfxImageFormat format = mImageSurface->Format();
   // Cairo prefers compositing to BGRX instead of BGRA where possible.
+  // Cairo/pixman lacks some fast paths for compositing BGRX onto BGRA, so
+  // just report it as BGRX directly in that case.
+  // Otherwise, for Skia, report it as BGRA to the compositor. The alpha
+  // channel will be discarded when we put the image.
   if (format == gfx::SurfaceFormat::X8R8G8B8_UINT32) {
     gfx::BackendType backend = gfxVars::ContentBackend();
     if (!gfx::Factory::DoesBackendSupportDataDrawtarget(backend)) {
